@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor httpcontext;
@{   
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


@*datatable*@

@{
    var rol = httpcontext.HttpContext.Session.GetString("rol");
    var esAdmin = rol == "Admin" ? true : false;
}
    <h2>Lista de Productos</h2>
@if (esAdmin)
{
    <div class="col m12">
        <p>
            @Html.ActionLink("Crear", "Create")
        </p>

    </div>
    <br />
}

<div class="table-responsive">
       <table id="miTabla" class="table table-striped table-bordered table-hover dataTables-List" style="table-layout:fixed;">
                    <thead>
            <tr class="table table-bordered">
                <th class="table-success">
                                 Nombre
                            </th>
                <th class="table-success">
                              Descripcion
                            </th>
                <th class="table-success">
                              Stock
                            </th>
                <th class="table-success">
                               Marca
                            </th>
                <th class="table-success">
                                Precio
                            </th>
                <th class="table-success">
                    Fecha Creación
                </th>
                <th class="table-success">
                                 Categoria
                            </th>
                <th class="table-success">
                                Sucursal
                            </th>
                <th class="table-success">
                                Proveedor
                            </th>
                <th class="table-success">
                                 Acciones
                             </th>
             </tr>
                    </thead>
       </table>
  </div>

@* imagen *@
<div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
             
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal(this);">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <img id="miImagen" class="img-thumbnail" width="400" height="50">
            </div>
           
        </div>
    </div>
</div>

@*borrar*@
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
           
            <div class="modal-body">
                ¿Estás seguro de que deseas deshabilitar este registro?
            </div>
            <div class="modal-footer">
                    
                    <button type="submit" class="btn btn-danger" onclick="deleteitem()">Deshabilitar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closemodal(this);">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@*descontar producto*@
<div class="modal fade" id="discountModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body">
                Digite la cantidad vendida de este producto
            </div>
            <div class="modal-footer">
                <input type="text" id="cant" name="cant" />
                <button type="submit" class="btn btn-success" onclick="discount()">Descontar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closemodal(this);">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script >
        $(document).ready(function () {
            call();
        });

    function call() 
    {
            HoldOn.open({ theme: 'sk-circle', message: 'Espere un momento...' });
            fetch('@Url.Action("IndexJSON", "Producto")',
            {
                method: 'GET',
                headers:
                {
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
            .then(data => {
                console.log(data);
                data.forEach(item => {
                        const fecha = new Date(item.fechaCreacion);
                        item.fechaCreacion = fecha.toLocaleString('es-ES');
                });
                HoldOn.close();
                var table = $('.dataTables-List').DataTable(
                    {
                        "deferRender": true,
                        select: true,
                        responsive: true,
                        autoWidth: false,
                        bPaginate: true,
                        "ordering": true,
                        "colReorder": true,
                        dom: 'Blfrtip',
                        data: data,
                        columns:
                            [
                                    { data: "nombre", name: "nombre", autoWidth: true },                               
                                    { data: "descripcion", name: "descripcion", autoWidth: true },
                                    { data: "cantidad", name: "cantidad", autoWidth: true },
                                    { data: "marca", name: "marca", autoWidth: true },
                                    { data: "precio", name: "precio", autoWidth: true },
                                    { data: "fechaCreacion", name: "fechaCreacion", autoWidth: true },
                                    { data: "categoria.nombre", name: "categoria.nombre", autoWidth: true },
                                    { data: "sucursal.nombre", name: "sucursal.nombre", autoWidth: true },
                                    { data: "proveedor.nombre", name: "proveedor.nombre", autoWidth: true },
                                {
                                    data: null,
                                    render: function (data, type, row) {
                                        var id = row.id;
                                        
                                        var buttonsHtml = '<div class="btn-group" role="group">';
                                        var EsAdmin = @esAdmin.ToString().ToLower();
                                            if (EsAdmin) {
                                                buttonsHtml += '<button class="btn edit-button" data-id="' + id + '" title="Editar"><i class="fa-solid fa-pencil color-blue" style="color:green"></i></button>';
                                        }
                                            buttonsHtml += '<button  class="btn image-button" data-id="' + id + '" title="Imagen"><i class="fa-solid fa-image " style="color:green"></i></button>';
                                            buttonsHtml += '<button  class="btn delete-button" data-id="' + id + '" title="Deshabilitar"><i class="fa-solid fa-trash-can" style="color:red"></i></button>';
                                            buttonsHtml += '<button  class="btn discount-button" data-id="' + id + '" title="Descontar Producto"><i class="fa-sharp fa-light fa-angles-down" style="color:green"></i></button>';
                                            buttonsHtml += '</div>';
                                       
                                        return buttonsHtml;
                                    }
                                },

                            ],
                            createdRow: function (row, data, dataIndex) {
                                $(row).addClass('row-with-buttons');
                            },
                            buttons:
                                [
                                    {
                                        extend: 'excel', className: 'btn-primary', excelStyles:
                                        {
                                            template: "green_medium",
                                        }
                                    }
                                ],
                            language: {
                                "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                            },
                    });
                  $('.dataTables-List').on('click', '.edit-button', function() {
                             var id = $(this).data('id');
                             window.location.href = '@Url.Action("Edit", "Producto")?id=' + id;
                  });
                    // Manejar el evento de clic en el botón de imagen
                    $('.dataTables-List').on('click', '.image-button', function () {
                        var id = $(this).data('id');
                        onclick = process(id);
                    });

                    // Manejar el evento de clic en el botón de deshabilitar
                    $('.dataTables-List').on('click', '.delete-button', function () {
                        var id = $(this).data('id');
                        onclick = edit(id);
                        $('#deleteModal').modal('show');
                    });

                    // Manejar el evento de clic en el botón de descontar
                    $('.dataTables-List').on('click', '.discount-button', function () {
                        var id = $(this).data('id');
                        onclick = edit(id);
                        $('#discountModal').modal('show');
                    });
            }).catch(error => {
                console.error(error);
            });
        }

        function process(id) {
            const params = new URLSearchParams();
            params.append("id", id);
            HoldOn.open({ theme: 'sk-circle', message: 'Cargando imagen...' });
            fetch("@Url.Content("~/").ToString()" + "Producto/ObtenerImagenModal", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: params
            })
                .then(response => response.json())
                .then(data => {
                   
                    // Asigna el valor de la imagen al atributo src de la etiqueta <img>
                    if (data.imagen!=null)
                    {
                        let img = document.getElementById("miImagen");
                        img.src = "data:image/png;base64," + data.imagen;
                        HoldOn.close();
                        $('#exampleModalCenter').modal('show');
                    }
                    else
                    {
                        HoldOn.close();
                        MostrarSweetAlert(data.message, "error");
                       
                    }
                 
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        //Eliminar
        var selectedId;
        function edit(id) {
            selectedId = id;
        }
        function deleteitem() {
            const params = new URLSearchParams();
            params.append("id", selectedId);
            fetch("@Url.Content("~/").ToString()" + "Producto/Deshabilitar", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: params
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    if (data.success) {
                        MostrarSweetAlert(data.message, "success");
                    }
                    else {
                        MostrarSweetAlert(data.message, "error");
                    }
                   
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        function discount() {
            const params = new URLSearchParams();
            var c = document.getElementById("cant").value;
            params.append("id", selectedId);
            params.append("cantidad", c);
            fetch("@Url.Content("~/").ToString()" + "Producto/DescontarProducto", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: params
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    if (data.success) {
                        MostrarSweetAlert(data.message, "success");
                    }
                    else {
                        MostrarSweetAlert(data.message, "error");
                    }

                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        function closemodal(button) {
            // Encuentra el modal padre del botón que se hizo clic
            var modal = button.closest('.modal');

            // Si se encuentra el modal, ciérralo
            if (modal) {
                $(modal).modal('hide');
            }
        }

        function MostrarSweetAlert(msj, tp)
        {
            switch (tp) { 
                case "success":
                    swal("Éxito", msj, tp);
                    $("button.confirm").text("Aceptar").click(function () { location.reload(); });
                    break;
                case "error":
                    swal("Error", msj, tp);
                    break;
                case "warning":
                    swal("Advertencia", msj, tp);
                    break;
                    
            }
        }


      
    </script>
}


